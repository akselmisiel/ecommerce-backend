-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS ecommerce.address
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    street_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    building_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    city character varying(100) COLLATE pg_catalog."default" NOT NULL,
    country character varying(100) COLLATE pg_catalog."default" NOT NULL,
    postal_code character varying(255) COLLATE pg_catalog."default" NOT NULL,
    address_line character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT address_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS ecommerce.user_address
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id bigint NOT NULL,
    address_id bigint NOT NULL,
    is_default boolean,
    CONSTRAINT user_address_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS ecommerce."user"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    first_name character varying(55) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(55) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    mobile_number character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    cart_id bigint,
    CONSTRAINT user_pkey PRIMARY KEY (id),
    CONSTRAINT cart_id_uq UNIQUE (cart_id)
);

CREATE TABLE IF NOT EXISTS ecommerce.cart
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    total_price double precision NOT NULL,
    CONSTRAINT cart_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS ecommerce.cart_item
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    cart_id bigint NOT NULL,
    product_id bigint NOT NULL,
    quantity integer NOT NULL,
    CONSTRAINT cart_item_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS ecommerce.product
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    product_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description character varying(500) COLLATE pg_catalog."default" NOT NULL,
    product_image character varying(255) COLLATE pg_catalog."default" NOT NULL,
    quantity integer NOT NULL,
    price double precision NOT NULL,
    category_id bigint NOT NULL,
    CONSTRAINT product_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS ecommerce.product_category
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    parent_category_id bigint,
    category_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT product_category_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS ecommerce.order_item
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    product_id bigint NOT NULL,
    order_id bigint NOT NULL,
    quantity integer NOT NULL,
    CONSTRAINT order_item_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS ecommerce."order"
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    order_date character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    total_price integer NOT NULL,
    user_id bigint NOT NULL,
    CONSTRAINT order_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS ecommerce.user_address
    ADD CONSTRAINT user_address_address_id_fkey FOREIGN KEY (address_id)
    REFERENCES ecommerce.address (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecommerce.user_address
    ADD CONSTRAINT user_address_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES ecommerce."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecommerce."user"
    ADD CONSTRAINT user_cart_id_fkey FOREIGN KEY (cart_id)
    REFERENCES ecommerce.cart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS cart_id_uq
    ON ecommerce."user"(cart_id);


ALTER TABLE IF EXISTS ecommerce.cart_item
    ADD CONSTRAINT cart_item_cart_id_fkey FOREIGN KEY (cart_id)
    REFERENCES ecommerce.cart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecommerce.cart_item
    ADD CONSTRAINT cart_item_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES ecommerce.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecommerce.product
    ADD CONSTRAINT product_category_id_fkey FOREIGN KEY (category_id)
    REFERENCES ecommerce.product_category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecommerce.product_category
    ADD CONSTRAINT product_category_parent_category_id_fkey FOREIGN KEY (parent_category_id)
    REFERENCES ecommerce.product_category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecommerce.order_item
    ADD CONSTRAINT order_item_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES ecommerce."order" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecommerce.order_item
    ADD CONSTRAINT order_item_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES ecommerce.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS ecommerce."order"
    ADD CONSTRAINT order_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES ecommerce."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;